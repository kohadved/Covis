// pages/index.js
import React, { useEffect, useState } from 'react';
import dynamic from 'next/dynamic';
import Sidebar from '../components/Sidebar';
import styles from '../styles/Home.module.css';

// Dynamically import the map so it only renders on the client.
const SimulationMap = dynamic(() => import('../components/SimulationMap'), { ssr: false });

/* ----- Provided GeoJSON Data ----- */
const geojson = {
  "type": "FeatureCollection",
  "features": [
    {
      "type": "Feature",
      "properties": {},
      "geometry": {
        "coordinates": [
          [-118.24896807852329, 34.04971777442145],
          [-118.25334571011551, 34.045195893513664],
          [-118.25992844153006, 34.04939477097227],
          [-118.26400449609713, 34.04506596017366],
          [-118.2585183073544, 34.0416889482982],
          [-118.249115584393, 34.05177452047626],
          [-118.25355543051447, 34.05445748221031],
          [-118.26703552955762, 34.03995680620848],
          [-118.26928289578004, 34.03649245363707],
          [-118.26593862462896, 34.03445722645459],
          [-118.26290755032244, 34.03809500961374],
          [-118.26212377897426, 34.03770530747198],
          [-118.25972011962347, 34.040173469610906],
          [-118.2560625656415, 34.03774864086843],
          [-118.25522654002916, 34.03718575374468],
          [-118.25261401989755, 34.039437421730725]
        ],
        "type": "LineString"
      }
    },
    {
      "type": "Feature",
      "properties": {},
      "geometry": {
        "coordinates": [
          [-118.2527178691383, 34.03943607072587],
          [-118.24435579715228, 34.03207330863245],
          [-118.24184842377981, 34.036058720163126],
          [-118.23996783992962, 34.03813770875631],
          [-118.23913662131945, 34.04922157618378],
          [-118.23819606751408, 34.04904847245727],
          [-118.23809570491832, 34.054413786152296],
          [-118.24541843431061, 34.059160816108104],
          [-118.24875824129543, 34.06287715932159],
          [-118.25470619314135, 34.057775596778995],
          [-118.24896459984228, 34.05397547461121],
          [-118.24771123621827, 34.055100543361334],
          [-118.24080933585523, 34.0504332563538],
          [-118.23966099364236, 34.052337271143],
          [-118.23830198931475, 34.05121229762081],
          [-118.23808947607482, 34.04497943049316],
          [-118.23808827185442, 34.043334112840014],
          [-118.23516285345505, 34.04376714807006],
          [-118.23192097402787, 34.04151532840635],
          [-118.22815516693984, 34.041514723402884],
          [-118.22106185755393, 34.043161603376845]
        ],
        "type": "LineString"
      }
    },
    {
      "type": "Feature",
      "properties": {},
      "geometry": {
        "coordinates": [
          [-118.22095775810286, 34.0430750653868],
          [-118.22138067212606, 34.04740344180078],
          [-118.22388639977825, 34.052164130953074],
          [-118.2314031262477, 34.053550444925335],
          [-118.23182003746118, 34.05026085933575],
          [-118.23265551491183, 34.04852932776545],
          [-118.2326529155452, 34.042294786656214],
          [-118.23317591519788, 34.04151550480597],
          [-118.23244182739268, 34.034672849301685],
          [-118.22304106341367, 34.03450168037752],
          [-118.22179110909406, 34.03381036941883],
          [-118.21804234131861, 34.04195077151313],
          [-118.21461018472573, 34.04731643497135],
          [-118.21410090790945, 34.051986398559976],
          [-118.21429944175588, 34.055361403305454],
          [-118.21429150395431, 34.05692042257097],
          [-118.22274475924797, 34.05389351142176],
          [-118.22534725430401, 34.0526838071809],
          [-118.22670303200226, 34.052684319950714],
          [-118.22784533905045, 34.04714410732069],
          [-118.22627602396568, 34.038224081741674],
          [-118.23850484493602, 34.038137784616126],
          [-118.23933669355833, 34.02453434123673],
          [-118.24289075046708, 34.0235809676729],
          [-118.24581788770675, 34.02427424610417],
          [-118.2498947321298, 34.02609329072935],
          [-118.26108074003437, 34.03137737757376],
          [-118.26254439960118, 34.03207043841772],
          [-118.25606256564124, 34.03952256345252],
          [-118.250419197372, 34.04333396459192],
          [-118.2464493187488, 34.047143984779694],
          [-118.24310529728169, 34.045758687688604],
          [-118.24174941957716, 34.04939455018717],
          [-118.24561669461185, 34.05164432786155],
          [-118.25115125532753, 34.04575867687457],
          [-118.24540277366636, 34.04255456386112],
          [-118.2522995641701, 34.03527794016341],
          [-118.25334473067059, 34.03363159272466],
          [-118.25564443271156, 34.03475760849523],
          [-118.25052316121608, 34.04021585371969],
          [-118.25324081938527, 34.04281430969567],
          [-118.25689873486495, 34.04021561318709],
          [-118.2549127872777, 34.03882952779533],
          [-118.26055790987883, 34.03224409831114],
          [-118.25616709387897, 34.0300783972328],
          [-118.25397193051299, 34.03276493737748],
          [-118.25031338805408, 34.03129253643843],
          [-118.24665600143845, 34.03623121540663],
          [-118.25031437533843, 34.04030207556336],
          [-118.24571735658265, 34.044978640847205],
          [-118.2435245462807, 34.047922180091035],
          [-118.244883086773, 34.048354989034905],
          [-118.24613872759602, 34.04965271082692],
          [-118.24812889888335, 34.051120215834146],
          [-118.24332876646123, 34.0563081166876],
          [-118.24238733729504, 34.057347652907936],
          [-118.23987547824032, 34.058563793715365],
          [-118.24374582846858, 34.0605462683216],
          [-118.24886175501373, 34.05561558384781],
          [-118.24990690545002, 34.056391713930026],
          [-118.24750778821628, 34.05898372706011],
          [-118.2484461656201, 34.05976312870412],
          [-118.25303885418191, 34.056907565892786],
          [-118.2590916238742, 34.05008354657984],
          [-118.25595778409004, 34.04800957841546],
          [-118.25919711629109, 34.04428701579873],
          [-118.25616634573444, 34.04246845897043],
          [-118.24791922565058, 34.05086140148606],
          [-118.24247864293909, 34.047230548557096],
          [-118.24425323894172, 34.04411379336315],
          [-118.2400725846477, 34.041775743615986],
          [-118.23965701406136, 34.046018519937846],
          [-118.23829821405806, 34.045325912694295],
          [-118.23809014299374, 34.04705738779863],
          [-118.23254935791502, 34.04731755267598]
        ],
        "type": "LineString"
      }
    },
    {
      "type": "Feature",
      "properties": {},
      "geometry": {
        "coordinates": [
          [-118.23223186470076, 34.03458696395519],
          [-118.23233353475513, 34.027482596622804],
          [-118.23923101068658, 34.02462232063783],
          [-118.24132156778109, 34.02392899457274],
          [-118.24403974695028, 34.02488231268431],
          [-118.24801217633166, 34.02704835353374],
          [-118.24613118411762, 34.02912839475346],
          [-118.24863976528479, 34.0302543771501],
          [-118.24801278466987, 34.03112092864565],
          [-118.2517757197599, 34.033026502961704],
          [-118.24822274621636, 34.037964688507785],
          [-118.2461331841031, 34.04013018958143],
          [-118.24404277585454, 34.03857125417127],
          [-118.24592339309177, 34.03597264186554],
          [-118.2404873793035, 34.031294666611174],
          [-118.24215931510476, 34.02999491010455],
          [-118.24425028724596, 34.031987657825184],
          [-118.24539963458898, 34.02973497413541],
          [-118.24236788200338, 34.02791534251999],
          [-118.241113880666, 34.029388388407725],
          [-118.2381864385446, 34.02730875901969],
          [-118.22982877623406, 34.02562221323666],
          [-118.23004884531998, 34.03645878595614],
          [-118.23058615007986, 34.04027687540979],
          [-118.23787670632939, 34.04569208155388],
          [-118.23830773739937, 34.04915294524362],
          [-118.22171158972917, 34.047200266810876],
          [-118.21990303717675, 34.04719948308757],
          [-118.2173609941521, 34.05225071005296],
          [-118.21832383049656, 34.052782593894804],
          [-118.21874722183193, 34.05171963780862],
          [-118.23124224686822, 34.05625064121158],
          [-118.23713681327564, 34.058111204532466],
          [-118.23649636907749, 34.06165792283301],
          [-118.2418624765903, 34.063595933429966],
          [-118.24357853992885, 34.063502554145884],
          [-118.24625928989497, 34.06455645065037],
          [-118.2575897627669, 34.05464350212924],
          [-118.25972935496382, 34.051985233349],
          [-118.26369091781785, 34.049684683446074],
          [-118.27044387329774, 34.045514951726076],
          [-118.27333680273915, 34.042407287206444],
          [-118.27408873614777, 34.03814432289862],
          [-118.27044473445658, 34.03698998582432],
          [-118.26433519128526, 34.04498212779842],
          [-118.27130031552832, 34.04782321865849],
          [-118.27011853558523, 34.04950841123208],
          [-118.2630494079461, 34.04604734838334],
          [-118.26187092315502, 34.04604733051666],
          [-118.26058533520832, 34.04533718161281],
          [-118.26572900770626, 34.03965449999447],
          [-118.2644430179388, 34.03894421657179],
          [-118.26229967087173, 34.041519629008775],
          [-118.25929950074234, 34.03956602541611],
          [-118.2647653019087, 34.032903540444195],
          [-118.26337197780222, 34.03254828312116],
          [-118.25672856267859, 34.040364619825965]
        ],
        "type": "LineString"
      }
    },
    {
      "type": "Feature",
      "properties": {},
      "geometry": {
        "coordinates": [
          [-118.2486867058974, 34.06270048271287],
          [-118.25499709014835, 34.06710822234979],
          [-118.26204990690826, 34.06994344861016],
          [-118.26579331582352, 34.06464076265195],
          [-118.27018801070253, 34.06669218556031],
          [-118.27996431051254, 34.05207895649937],
          [-118.27653976641628, 34.050393641077406],
          [-118.27869135708454, 34.047286683136505],
          [-118.28158428905508, 34.04870728987437],
          [-118.28427445888363, 34.04515482708128],
          [-118.2842834863944, 34.03698059466656],
          [-118.27881229742331, 34.03813661238753],
          [-118.27719946937509, 34.04062500633398],
          [-118.27934662194075, 34.04151262074987],
          [-118.2731075831343, 34.05065831839592],
          [-118.27556747554351, 34.05198882486761],
          [-118.27438559391123, 34.05349631627645],
          [-118.27567271076948, 34.05385169830308],
          [-118.27352817428425, 34.05668945649734],
          [-118.26334272383548, 34.05224684437276],
          [-118.25991118066517, 34.05737819265417],
          [-118.26161908830247, 34.05843826378502],
          [-118.26450640495099, 34.059325162351186],
          [-118.270074299491, 34.06198955914873],
          [-118.27266193663307, 34.05828071923017],
          [-118.26922625967852, 34.05703282196539],
          [-118.27224315938305, 34.05216504513268],
          [-118.27095862942565, 34.05181030714894],
          [-118.2702136303246, 34.05039205655987],
          [-118.26785849489076, 34.04959369835343],
          [-118.26453757429405, 34.049682237468446],
          [-118.25682795679435, 34.0453340556614],
          [-118.26315269687427, 34.03876359499159],
          [-118.26454617613771, 34.03894103423781],
          [-118.26679977607708, 34.03414389576217],
          [-118.26937160169172, 34.03529875899267],
          [-118.27130071340218, 34.03592049985828]
        ],
        "type": "LineString"
      }
    },
    {
      "type": "Feature",
      "properties": {},
      "geometry": {
        "coordinates": [
          [-118.27097929649493, 34.03574282392847],
          [-118.27226792280791, 34.03432066655152],
          [-118.27441271462465, 34.035297392728964],
          [-118.27924000794837, 34.03796146391829],
          [-118.2812775160391, 34.038583213501724],
          [-118.27923811255063, 34.041426249311144],
          [-118.28416962115081, 34.043646920509175],
          [-118.28425971737916, 34.05243653649977],
          [-118.28039380652096, 34.05207939584746],
          [-118.27888920155961, 34.05340920767199],
          [-118.27010944681399, 34.04959410491041],
          [-118.27151003246523, 34.047820244728925],
          [-118.27696876245852, 34.05021615186534],
          [-118.27470712923842, 34.05331875028466],
          [-118.27792625040378, 34.05509551548246],
          [-118.27567118961889, 34.05819828372934],
          [-118.27320648102204, 34.056777935480895]
        ],
        "type": "LineString"
      }
    }
  ]
};

/* ----- Build streetRoutes from GeoJSON features ----- */
const streetRoutes = geojson.features.map((feature, index) => ({
  id: index,
  name: `Route ${index + 1}`,
  path: feature.geometry.coordinates.map(coord => [coord[1], coord[0]])
}));

/* ----- Lockdown Areas (extended) ----- */
const lockdownAreas = [
  {
    id: 1,
    name: 'Downtown Lockdown',
    center: [34.0522, -118.2500],
    radius: 500, // in meters
  },
  {
    id: 2,
    name: 'Central Lockdown',
    center: [34.048, -118.240],
    radius: 300,
  },
  {
    id: 3,
    name: 'West Side Lockdown',
    center: [34.050, -118.260],
    radius: 400,
  },
  // {
  //   id: 4,
  //   name: 'East Side Lockdown',
  //   center: [34.050, -118.230],
  //   radius: 400,
  // },
  {
    id: 5,
    name: 'West Side Lockdown - 2',
    center: [34.04554629627377, -118.27853721458987],
    radius: 500,
  },
];

/* ----- Define Hospital Data ----- */
const hospitals = [
  {
    id: 1,
    name: 'Saint Mary Hospital',
    position: [34.0525, -118.2520],
    icuShortage: 40, // percentage shortage
    medShortage: 55,
    capacity: 250, // optional hospital capacity
  },
  {
    id: 2,
    name: 'City Health Center',
    position: [34.04758542180522, -118.23844321683643],
    icuShortage: 60,
    medShortage: 70,
    capacity: 180,
  },
  {
    id: 3,
    name: 'Community Clinic',
    position: [34.04554629627377, -118.26747666251737],
    icuShortage: 20,
    medShortage: 35,
    capacity: 100,
  },
  {
    id: 4,
    name: 'Regional Medical Center',
    position: [34.05415084958615, -118.26532270129891],
    icuShortage: 50,
    medShortage: 65,
    capacity: 300,
  },
];

/* ----- Helper Functions ----- */

// Haversine distance (in meters)
function haversineDistance(lat1, lon1, lat2, lon2) {
  const R = 6371e3;
  const toRad = Math.PI / 180;
  const φ1 = lat1 * toRad;
  const φ2 = lat2 * toRad;
  const Δφ = (lat2 - lat1) * toRad;
  const Δλ = (lon2 - lon1) * toRad;
  const a =
    Math.sin(Δφ / 2) ** 2 +
    Math.cos(φ1) * Math.cos(φ2) * Math.sin(Δλ / 2) ** 2;
  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));
  return R * c;
}

// Given a route (array of coordinates) and a progress value (0 to 1),
// compute the current position along the route.
function getPositionAlongRoute(routePath, progress) {
  let segments = [];
  let totalLength = 0;
  for (let i = 0; i < routePath.length - 1; i++) {
    const [lat1, lon1] = routePath[i];
    const [lat2, lon2] = routePath[i + 1];
    const segLength = haversineDistance(lat1, lon1, lat2, lon2);
    segments.push(segLength);
    totalLength += segLength;
  }
  let distanceAlong = progress * totalLength;
  let accumulated = 0;
  for (let i = 0; i < segments.length; i++) {
    if (accumulated + segments[i] >= distanceAlong) {
      const segmentProgress = (distanceAlong - accumulated) / segments[i];
      const [lat1, lon1] = routePath[i];
      const [lat2, lon2] = routePath[i + 1];
      const lat = lat1 + (lat2 - lat1) * segmentProgress;
      const lon = lon1 + (lon2 - lon1) * segmentProgress;
      return [lat, lon];
    }
    accumulated += segments[i];
  }
  return routePath[routePath.length - 1];
}

export default function Home() {
  const [people, setPeople] = useState([]);
  const [stats, setStats] = useState({
    total: 0,
    infected: 0,
    locked: 0,
    virality: 1.5,
  });

  /* ----- Initialize People on a Route ----- */
  useEffect(() => {
    const totalPeople = 200; // denser simulation
    const newPeople = [];
    for (let i = 0; i < totalPeople; i++) {
      const routeIndex = Math.floor(Math.random() * streetRoutes.length);
      const route = streetRoutes[routeIndex];
      const progress = Math.random();
      const speed = 0.0005 + Math.random() * 0.001; // fraction per tick
      const position = getPositionAlongRoute(route.path, progress);
      newPeople.push({
        id: i,
        routeIndex,
        progress,
        speed,
        infected: Math.random() < 0.1, // 10% chance to be infected
        locked: false,
        position,
      });
    }
    setPeople(newPeople);
  }, []);

  /* ----- Simulation Update (every 100ms for smooth animation) ----- */
  useEffect(() => {
    const interval = setInterval(() => {
      setPeople(oldPeople =>
        oldPeople.map(person => {
          if (person.locked) return person; // Do not move locked dots
          let newProgress = person.progress + person.speed;
          let newSpeed = person.speed;
          // Bounce off ends of the route.
          if (newProgress >= 1) {
            newProgress = 1;
            newSpeed = -person.speed;
          } else if (newProgress <= 0) {
            newProgress = 0;
            newSpeed = -person.speed;
          }
          const route = streetRoutes[person.routeIndex];
          const newPosition = getPositionAlongRoute(route.path, newProgress);
          // Check against each lockdown area.
          let isLocked = false;
          for (const area of lockdownAreas) {
            const distance = haversineDistance(
              newPosition[0],
              newPosition[1],
              area.center[0],
              area.center[1]
            );
            if (distance <= area.radius) {
              isLocked = true;
              break;
            }
          }
          return {
            ...person,
            progress: isLocked ? person.progress : newProgress,
            speed: isLocked ? 0 : newSpeed,
            locked: isLocked,
            position: newPosition,
          };
        })
      );
    }, 50);
    return () => clearInterval(interval);
  }, []);

  /* ----- Update Statistics ----- */
  useEffect(() => {
    setStats({
      total: people.length,
      infected: people.filter(p => p.infected).length,
      locked: people.filter(p => p.locked).length,
      virality: (1.5 + Math.random()).toFixed(2),
    });
  }, [people]);

  return (
    <div className={styles.container}>
      <div className={styles.mapContainer}>
        <SimulationMap
          people={people}
          lockdownAreas={lockdownAreas}
          hospitals={hospitals}
          streetRoutes={streetRoutes}
          // Center the map roughly over the routes (adjust as needed)
          mapCenter={[34.045, -118.250]}
          mapZoom={13}
        />
      </div>
      <div className={styles.sidebar}>
        <Sidebar stats={stats} hospitals={hospitals} />
      </div>
    </div>
  );
}
